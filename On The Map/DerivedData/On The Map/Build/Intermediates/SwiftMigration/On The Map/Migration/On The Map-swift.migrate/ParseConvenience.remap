[
 {
  "file": "/Users/Brwong/Desktop/iOS Apps/On The Map/On The Map/ParseConvenience.swift",
  "offset": 752,
  "remove": 3342,
  "text": "(parseError)\n            }else{\n                if let locations: AnyObject = result{\n                    let locationDictionary = locations.valueForKey(JSONResponseKeys.LocationResults) as! [[String:AnyObject]]\n                    ParseStudent.locationsFromResults(locationDictionary)\n                    completionHandler(success:true, locations: locationDictionary, errorString: \"Error in parsing student locations\")\n                }else{\n                    print(\"Failed to get locations\")\n                }\n            }\n        }\n    }\n    \n    func postStudentLocation(uniqueKey: String, firstName: String, lastName: String, mapString: String, mediaURL: String, latitude: NSNumber, longitude: NSNumber, completionHandler:(success:Bool, error: String) -> Void){\n    \n        let jsonBody: [String:AnyObject] = [\n            JSONBodyKeys.UniqueKey: self.userID,\n            JSONBodyKeys.FirstName : firstName,\n            JSONBodyKeys.LastName : lastName,\n            JSONBodyKeys.MapString : mapString,\n            JSONBodyKeys.StudentLink : mediaURL,\n            JSONBodyKeys.Latitude : latitude,\n            JSONBodyKeys.Longitude : longitude\n        ]\n        \n        taskForPOSTMethod(jsonBody, completionHandler: { (result, error) -> Void in\n            if let error = error{\n                print(error)\n                completionHandler(success: false, error: \"Error in posting\")\n                print(\"Error in posting\")\n                //TODO: Replace with alertview\n            }else{\n                if let postSuccess: AnyObject = result{\n                    completionHandler(success: true, error: \"Post success!\")\n                }\n            }\n        })\n    }\n    \n    //Return the objectId when finished, since this is the only piece of data we need to update(PUT) a new location\n    func queryExistingLocation(userId:String, completionHandler:(success:String?, error: String) -> Void){\n        taskForQueryMethod(userId, completionHandler: { (result, error) -> Void in\n            if let error = error{\n                print(\"Query failed\")\n                completionHandler(success: nil, error: \"Failed in querying\")\n            }else{\n                if let querySuccess: AnyObject = result{\n                    let jsonData = JSON(querySuccess)\n                    let objectId = jsonData[\"results\"][0][\"objectId\"].stringValue\n                    completionHandler(success: objectId, error: \"\")\n                }\n            }\n        })\n    }\n    \n    func updateStudentLocation(objectId: String, uniqueKey: String, firstName: String, lastName: String, mapString: String, mediaURL: String, latitude: NSNumber, longitude: NSNumber, completionHandler:(success:Bool, error: String) -> Void){\n        \n        let jsonBody: [String:AnyObject] = [\n            JSONBodyKeys.UniqueKey: self.userID,\n            JSONBodyKeys.FirstName : firstName,\n            JSONBodyKeys.LastName : lastName,\n            JSONBodyKeys.MapString : mapString,\n            JSONBodyKeys.StudentLink : mediaURL,\n            JSONBodyKeys.Latitude : latitude,\n            JSONBodyKeys.Longitude : longitude\n        ]\n        \n        taskForPutMethod(objectId, jsonBody: jsonBody) { (result, error) -> Void in\n            if let error = error{\n                NSLog(\"%@\", error)\n                //Alert view\n                print",
 }
]
