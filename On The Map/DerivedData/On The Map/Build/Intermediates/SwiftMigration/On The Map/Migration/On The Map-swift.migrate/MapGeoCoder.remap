[
 {
  "file": "/Users/Brwong/Desktop/iOS Apps/On The Map/On The Map/MapGeoCoder.swift",
  "offset": 4734,
  "remove": 2341,
  "text": "(\"Successful update to pin\")\n                                    dispatch_async(dispatch_get_main_queue(), { () -> Void in\n                                        self.dismissViewControllerAnimated(false, completion: nil)\n                                    })\n                                }else{\n                                    //Notify of bad update\n                                    print(\"Unsuccessful update to pin\")\n                                }\n                            })\n                        }else{\n                            //Use data to post\n                            self.parseInstance.postStudentLocation(userId, firstName: firstName, lastName: lastName, mapString: self.mapString , mediaURL: self.mediaUrlField.text, latitude: self.userLat, longitude: self.userLon, completionHandler: { (success, error) -> Void in\n                                //TODO:\n                                //Replace w/ alert views\n                                if(success){\n                                    print(\"Successful Post\")\n                                    dispatch_async(dispatch_get_main_queue(), { () -> Void in\n                                        self.dismissViewControllerAnimated(false, completion: nil)\n                                    })\n                                }else{\n                                    //Notify of bad post\n                                    print(error)\n                                }\n                            })\n                        }\n                    }\n                })\n            }\n        }\n    }\n    \n    \n    func zoomInLocation(placeMark: CLPlacemark){\n        //Zoom in on map for desired radius\n        let spanX: CLLocationDegrees = 0.00725;\n        let spanY: CLLocationDegrees = 0.00725;\n        var region = MKCoordinateRegion()\n        region.center.latitude = placeMark.location.coordinate.latitude\n        region.center.longitude = placeMark.location.coordinate.longitude\n        \n        //To be passed to Parse\n        self.userLat = placeMark.location.coordinate.latitude\n        self.userLon = placeMark.location.coordinate.longitude\n        \n        region.span = MKCoordinateSpanMake(spanX, spanY)\n        self.mapView.setRegion(region, animated: true)\n        \n        //Create pin/annotation for location\n        let",
 }
]
